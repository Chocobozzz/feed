{"version":3,"sources":["../src/feed.js"],"names":["GENERATOR","DOCTYPE","Feed","options","items","categories","contributors","extensions","custom_fields","item","push","field_name","category","contributor","extension","format","console","warn","atom1","rss2","feed","_attr","xmlns","id","title","updated","ISODateString","Date","generator","root","author","name","email","link","uri","rel","href","atomLink","feedLinks","atom","hub","description","subtitle","image","logo","favicon","icon","copyright","rights","forEach","term","_item","entry","type","_cdata","date","summary","content","Array","isArray","oneAuthor","published","isAtom","isContent","channel","lastBuildDate","toUTCString","docs","rss","version","url","guid","indexOf","isPermaLink","pubDate","some","torrent","metainfo","mediagroup","i","index","i_metainfo","Object","enclosure","length","size_in_bytes","previous_metainfo","isDefault","nsfw","thumbnail","i_thumbnail","optional_attr","sortObject","o","keys","sort","reduce","r","k","home_page_url","json","feed_url","e","objects","map","feedItem","html_content","attachments","mime_type","date_modified","date_published","JSON","stringify","d","pad","n","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","module","exports"],"mappings":"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","file":"feed.js","sourcesContent":["import xml from 'xml'\n\nconst GENERATOR = 'Feed for Node.js'\nconst DOCTYPE = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n'\n\nclass Feed {\n\n  constructor(options) {\n    this.options = options\n    this.items = []\n    this.categories = []\n    this.contributors = []\n    this.extensions = []\n    this.custom_fields = []\n  }\n\n  addItem(item) {\n    this.items.push(item)\n  }\n\n  addCustomField(field_name) {\n    this.custom_fields.push(field_name)\n  }\n\n  addCategory(category) {\n    this.categories.push(category)\n  }\n\n  addContributor(contributor) {\n    this.contributors.push(contributor)\n  }\n\n  addExtension(extension) {\n    this.extensions.push(extension)\n  }\n\n  render(format) {\n    console.warn('DEPRECATED: use atom1() or rss2() instead of render()');\n    if (format === 'atom-1.0') {\n      return this.atom1();\n    } else {\n      return this.rss2();\n    }\n  }\n\n  atom1() {\n    const { options } = this\n\n    let feed = [\n      { _attr: { xmlns: 'http://www.w3.org/2005/Atom' } },\n      { id: options.id },\n      { title: options.title },\n      { updated: (options.updated ? this.ISODateString(options.updated) : this.ISODateString(new Date())) },\n      { generator: options.generator || GENERATOR },\n    ]\n\n    let root = [{ feed }]\n\n    if (options.author) {\n      const { name, email, link } = options.author\n      let author = []\n\n      if (name) {\n        author.push({ name });\n      }\n\n      if (email) {\n        author.push({ email });\n      }\n\n      if (link) {\n        author.push({ uri: link });\n      }\n\n      feed.push({ author })\n    }\n\n    // link (rel=\"alternate\")\n    if(options.link) {\n      feed.push({ link: { _attr: { rel: 'alternate', href: options.link }}});\n    }\n\n    // link (rel=\"self\")\n    const atomLink = options.feed || (options.feedLinks && options.feedLinks.atom);\n    if(atomLink) {\n      feed.push({ link: { _attr: { rel: 'self', href: atomLink }}});\n    }\n\n    // link (rel=\"hub\")\n    if(options.hub) {\n      feed.push({ link: { _attr: { rel:'hub', href: options.hub }}});\n    }\n\n    /**************************************************************************\n     * \"feed\" node: optional elements\n     *************************************************************************/\n\n    if(options.description) {\n      feed.push({ subtitle: options.description });\n    }\n\n    if(options.image) {\n      feed.push({ logo: options.image });\n    }\n\n    if(options.favicon) {\n      feed.push({ icon: options.favicon });\n    }\n\n    if(options.copyright) {\n      feed.push({ rights: options.copyright });\n    }\n\n    this.categories.forEach(category => {\n      feed.push({ category: [{ _attr: { term: category } }] });\n    })\n\n    this.contributors.forEach(_item => {\n      const { name, email, link } = _item\n      let contributor = [];\n\n      if(name) {\n        contributor.push({ name });\n      }\n\n      if(email) {\n        contributor.push({ email });\n      }\n\n      if(link) {\n        contributor.push({ uri: link });\n      }\n\n      feed.push({ contributor });\n    })\n\n    // icon\n\n    /**************************************************************************\n     * \"entry\" nodes\n     *************************************************************************/\n    this.items.forEach(item => {\n      //\n      // entry: required elements\n      //\n\n      let entry = [\n        { title: { _attr: { type: 'html' }, _cdata: item.title }},\n        { id: item.id || item.link },\n        { link: [{ _attr: { href: item.link } }]},\n        { updated: this.ISODateString(item.date) }\n      ]\n\n      //\n      // entry: recommended elements\n      //\n      if(item.description) {\n        entry.push({ summary: { _attr: { type: 'html' }, _cdata: item.description }});\n      }\n\n      if(item.content) {\n        entry.push({ content: { _attr: { type: 'html' }, _cdata: item.content }});\n      }\n\n      // entry author(s)\n      if(Array.isArray(item.author)) {\n        item.author.forEach(oneAuthor => {\n          const { name, email, link } = oneAuthor\n          let author = [];\n\n          if(name) {\n            author.push({ name });\n          }\n\n          if(email) {\n            author.push({ email });\n          }\n\n          if(link) {\n            author.push({ uri: link });\n          }\n\n          entry.push({ author });\n        })\n      }\n\n      // content\n\n      // link - relative link to article\n\n      //\n      // entry: optional elements\n      //\n\n      // category\n\n      // contributor\n      if(Array.isArray(item.contributor)) {\n        item.contributor.forEach(item => {\n          const { name, email, link } = item\n          let contributor = [];\n\n          if(name) {\n            contributor.push({ name });\n          }\n\n          if(email) {\n            contributor.push({ email });\n          }\n\n          if(link) {\n            contributor.push({ uri: link });\n          }\n\n          entry.push({ contributor });\n        })\n      }\n\n      // published\n      if(item.published) {\n        entry.push({ published: this.ISODateString(item.published) });\n      }\n\n      // source\n\n      // rights\n      if(item.copyright) {\n        entry.push({ rights: item.copyright });\n      }\n\n      feed.push({ entry: entry });\n    })\n\n    return DOCTYPE + xml(root, true);\n  }\n\n  rss2() {\n    const { options } = this\n    let isAtom = false\n    let isContent = false\n\n    let channel = [\n      { title: options.title },\n      { link: options.link },\n      { description: options.description },\n      { lastBuildDate: (options.updated ? options.updated.toUTCString() : new Date().toUTCString()) },\n      { docs: 'http://blogs.law.harvard.edu/tech/rss'},\n      { generator: options.generator || GENERATOR },\n    ]\n\n    let rss = [\n      { _attr: { version: '2.0' } },\n      { channel },\n    ]\n\n    let root = [{ rss }]\n\n    /**\n     * Channel Image\n     * http://cyber.law.harvard.edu/rss/rss.html#ltimagegtSubelementOfLtchannelgt\n     */\n    if(options.image) {\n       channel.push({\n        image: [\n          { title: options.title },\n          { url: options.image },\n          { link: options.link },\n        ]\n      });\n     }\n\n    /**\n     * Channel Copyright\n     * http://cyber.law.harvard.edu/rss/rss.html#optionalChannelElements\n     */\n    if(options.copyright) {\n      channel.push({ copyright: options.copyright });\n    }\n\n    /**\n     * Channel Categories\n     * http://cyber.law.harvard.edu/rss/rss.html#comments\n     */\n    this.categories.forEach(category => {\n      channel.push({ category });\n    })\n\n    /**\n     * Feed URL\n     * http://validator.w3.org/feed/docs/warning/MissingAtomSelfLink.html\n     */\n    const atomLink = options.feed || (options.feedLinks && options.feedLinks.atom);\n    if(atomLink) {\n      isAtom = true\n\n      channel.push({\n        \"atom:link\": {\n          _attr: {\n            href: atomLink,\n            rel: 'self',\n            type: 'application/rss+xml',\n          },\n        },\n      })\n    }\n\n    /**\n     * Hub for PubSubHubbub\n     * https://code.google.com/p/pubsubhubbub/\n     */\n    if(options.hub) {\n      isAtom = true;\n      channel.push({\n        \"atom:link\": {\n          _attr: {\n            href: options.hub,\n            rel: 'hub',\n          },\n        },\n      })\n    }\n\n    /**\n     * Channel Categories\n     * http://cyber.law.harvard.edu/rss/rss.html#hrelementsOfLtitemgt\n     */\n    this.items.forEach(entry => {\n      let item = [];\n\n      // Handle custom fields\n      this.custom_fields.forEach(field_name => {\n        if(entry[field_name]){\n          item.push({ [field_name]: entry[field_name]});\n        }\n\n      });\n\n      if(entry.title) {\n        item.push({ title: { _cdata: entry.title }});\n      }\n\n      if(entry.link) {\n        item.push({ link: entry.link });\n      }\n\n      if(entry.guid) {\n        if (entry.guid.indexOf('http') === -1) {\n          item.push({ guid: { _cdata: entry.guid, _attr: {isPermaLink: 'false'} } });\n        } else {\n          item.push({ guid: entry.guid });\n        }\n      } else if (entry.link) {\n        item.push({ guid: entry.link });\n      }\n\n      if(entry.date) {\n        item.push({ pubDate: entry.date.toUTCString() });\n      }\n\n      if(entry.description) {\n        item.push({ description: { _cdata: entry.description }});\n      }\n\n      if(entry.content) {\n        isContent = true;\n        item.push({ 'content:encoded': { _cdata: entry.content }});\n      }\n      /**\n       * Item Author\n       * http://cyber.law.harvard.edu/rss/rss.html#ltauthorgtSubelementOfLtitemgt\n       */\n      if(Array.isArray(entry.author)) {\n        entry.author.some(author => {\n          if (author.email && author.name) {\n            item.push({ author: author.email + ' (' + author.name + ')' })\n            return true\n          } else if (author.name) {\n            rss[0]._attr['xmlns:dc'] = 'http://purl.org/dc/elements/1.1/';\n            item.push({ 'dc:creator': author.name });\n            return true;\n          } return false\n        })\n      }\n\n      // rss feed only supports 1 enclosure per item\n      if (entry.torrent) {\n        let metainfo = entry.torrent;\n        if (!Array.isArray(metainfo)) metainfo = [ metainfo ];\n\n        let mediagroup = []\n        metainfo.forEach((i, index) => {\n          let i_metainfo = i\n          if (!(i instanceof Object)) i_metainfo = { url: i };\n\n          if (index == 0) {\n            item.push({ enclosure: [{ _attr: { type: 'application/x-bittorrent', url: i_metainfo.url } }] });\n            if ('size_in_bytes' in i_metainfo) {\n              item[item.length-1].enclosure[0]._attr['length'] = i_metainfo.size_in_bytes\n            }\n          } else {\n            if (index == 1) {\n              rss[0]._attr['xmlns:media'] = 'http://search.yahoo.com/mrss/';\n              let previous_metainfo = (!(metainfo[0] instanceof Object))? { url: metainfo[0] } : metainfo[0];\n              mediagroup.push({ \n                'media:content': [{\n                  _attr: { type: 'application/x-bittorrent', url: previous_metainfo.url, isDefault: \"true\" }\n                }]\n              });\n            }\n            mediagroup.push({ \n              'media:content': [{\n                _attr: { type: 'application/x-bittorrent', url: i_metainfo.url }\n              }]\n            });\n            \n          }\n        });\n        mediagroup.push({ 'media:rating': [(entry.nsfw) ? 'adult' : 'nonadult']})\n        if (metainfo.length > 1) item.push({ 'media:group': mediagroup })\n\n      } else if(entry.image) {\n        item.push({ enclosure: [{ _attr: {\n          length: entry.image.length,\n          type: entry.image.type,\n          url: entry.image.url\n        } }] });\n      }\n\n      if (entry.thumbnail) {\n        rss[0]._attr['xmlns:media'] = 'http://search.yahoo.com/mrss/';\n        let thumbnail = entry.thumbnail;\n        if (!Array.isArray(thumbnail)) thumbnail = [ thumbnail ];\n\n        thumbnail.forEach((i, index) => {\n          let i_thumbnail = i\n          if (!(i instanceof Object)) i_thumbnail = { url: i };\n\n          item.push({ \n            'media:thumbnail': [{ _attr: { url: i_thumbnail.url } }]\n          });\n          ['height', 'width', 'time'].forEach(optional_attr => {\n            if (optional_attr in i_thumbnail)\n              item[item.length-1]['media:thumbnail'][0]._attr[optional_attr] = i_thumbnail[optional_attr];\n          });\n        });\n      }\n\n      channel.push({ item });\n    })\n\n    if(isContent) {\n      rss[0]._attr['xmlns:content'] = 'http://purl.org/rss/1.0/modules/content/';\n    }\n\n    if(isAtom) {\n      rss[0]._attr['xmlns:atom'] = 'http://www.w3.org/2005/Atom';\n    }\n\n    /**\n     * Sort properties to provide reproducible results for strict implementations\n     */\n    function sortObject(o) {\n      return Object.keys(o).sort().reduce((r, k) => (r[k] = o[k], r), {});\n    }\n    if (rss[0]._attr) rss[0]._attr = sortObject(rss[0]._attr)\n\n    return DOCTYPE + xml(root, true);\n  }\n\n  json1() {\n    const { options, items, extensions } = this\n    let feed = {\n      version: 'https://jsonfeed.org/version/1',\n      title: options.title,\n    };\n\n    if (options.link) {\n      feed.home_page_url = options.link;\n    }\n\n    if (options.feedLinks && options.feedLinks.json) {\n      feed.feed_url = options.feedLinks.json;\n    }\n\n    if (options.description) {\n      feed.description = options.description;\n    }\n\n    if (options.image) {\n      feed.icon = options.image;\n    }\n\n    if (options.author) {\n      feed.author = {};\n      if (options.author.name) {\n          feed.author.name = options.author.name;\n      }\n      if (options.author.link) {\n          feed.author.url = options.author.link;\n      }\n    }\n\n    extensions.forEach(e => {\n      feed[e.name] = e.objects;\n    });\n\n    feed.items = items.map(item => {\n      let feedItem = {\n        id: item.id,\n        // json_feed distinguishes between html and text content\n        // but since we only take a single type, we'll assume HTML\n        html_content: item.content,\n      }\n      if (item.link) {\n        feedItem.url = item.link;\n      }\n      if(item.title) {\n        feedItem.title = item.title;\n      }\n      if (item.description) {\n        feedItem.summary = item.description;\n      }\n\n      if (item.torrent) {\n        let metainfo = item.torrent\n        if (!Array.isArray(metainfo)) metainfo = [ metainfo ]\n        if (!feedItem.attachments) feedItem.attachments = []\n\n        metainfo.forEach(i => {\n          let i_metainfo = i\n          if (!(i instanceof Object)) i_metainfo = { url: i }\n          feedItem.attachments.push({\n            ...i_metainfo,\n            mime_type: 'application/x-bittorrent'\n          })\n        });\n      }\n\n      if (item.image) {\n        feedItem.image = item.image\n      }\n\n      if (item.date) {\n        feedItem.date_modified = this.ISODateString(item.date);\n      }\n      if (item.published) {\n        feedItem.date_published = this.ISODateString(item.published);\n      }\n\n      if (item.author) {\n        let author = item.author;\n        if (author instanceof Array) {\n          // json feed only supports 1 author per post\n          author = author[0];\n        }\n        feedItem.author = {};\n        if (author.name) {\n            feedItem.author.name = author.name;\n        }\n        if (author.link) {\n            feedItem.author.url = author.link;\n        }\n      }\n\n      if(item.extensions) {\n        item.extensions.forEach(e => {\n          feedItem[e.name] = e.objects;\n        });\n      }\n\n      return feedItem;\n    });\n\n    return JSON.stringify(feed, null, 4);\n  }\n\n  ISODateString(d) {\n    function pad(n) {\n      return n<10 ? '0'+n : n\n    }\n\n    return d.getUTCFullYear() + '-'\n      + pad(d.getUTCMonth() + 1) + '-'\n      + pad(d.getUTCDate()) + 'T'\n      + pad(d.getUTCHours()) + ':'\n      + pad(d.getUTCMinutes()) + ':'\n      + pad(d.getUTCSeconds()) + 'Z'\n  }\n\n}\n\nmodule.exports = Feed\n"]}